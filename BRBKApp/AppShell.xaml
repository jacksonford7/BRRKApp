<?xml version="1.0" encoding="UTF-8"?>
<Shell xmlns="http://xamarin.com/schemas/2014/forms" 
       xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
       xmlns:local="clr-namespace:BRBKApp.Views"
       Title="BRBKApp"
       x:Class="BRBKApp.AppShell">

    <!--
        The overall app visual hierarchy is defined here, along with navigation.
    
        https://docs.microsoft.com/xamarin/xamarin-forms/app-fundamentals/shell/
    -->
      
    <Shell.Resources>
        <ResourceDictionary>
            <Style x:Key="BaseStyle" TargetType="Element">
                <Setter Property="Shell.BackgroundColor" Value="{StaticResource Primary}" />
                <Setter Property="Shell.ForegroundColor" Value="White" />
                <Setter Property="Shell.TitleColor" Value="White" />
                <Setter Property="Shell.DisabledColor" Value="#B4FFFFFF" />
                <Setter Property="Shell.UnselectedColor" Value="#95FFFFFF" />
                <Setter Property="Shell.TabBarBackgroundColor" Value="{StaticResource Primary}" />
                <Setter Property="Shell.TabBarForegroundColor" Value="White"/>
                <Setter Property="Shell.TabBarUnselectedColor" Value="#95FFFFFF"/>
                <Setter Property="Shell.TabBarTitleColor" Value="White"/>
            </Style>
            <Style TargetType="TabBar" BasedOn="{StaticResource BaseStyle}" />
            <Style TargetType="FlyoutItem" BasedOn="{StaticResource BaseStyle}" />

            <!--
            Default Styles for all Flyout Items
            https://docs.microsoft.com/xamarin/xamarin-forms/app-fundamentals/shell/flyout#flyoutitem-and-menuitem-style-classes
            -->
            <Style Class="FlyoutItemLabelStyle" TargetType="Label">
                <Setter Property="TextColor" Value="White"></Setter>
            </Style>
            <Style Class="FlyoutItemLayoutStyle" TargetType="Layout" ApplyToDerivedTypes="True">
                <Setter Property="VisualStateManager.VisualStateGroups">
                    <VisualStateGroupList>
                        <VisualStateGroup x:Name="CommonStates">
                            <VisualState x:Name="Normal">
                                <VisualState.Setters>
                                    <Setter Property="BackgroundColor" Value="{x:OnPlatform UWP=Transparent, iOS=White}" />
                                    <Setter TargetName="FlyoutItemLabel" Property="Label.TextColor" Value="{StaticResource Primary}" />
                                </VisualState.Setters>
                            </VisualState>
                            <VisualState x:Name="Selected">
                                <VisualState.Setters>
                                    <Setter Property="BackgroundColor" Value="{StaticResource Primary}" />
                                </VisualState.Setters>
                            </VisualState>
                        </VisualStateGroup>
                    </VisualStateGroupList>
                </Setter>
            </Style>

            <!--
            Custom Style you can apply to any Flyout Item
            -->
            <Style Class="MenuItemLayoutStyle" TargetType="Layout" ApplyToDerivedTypes="True">
                <Setter Property="VisualStateManager.VisualStateGroups">
                    <VisualStateGroupList>
                        <VisualStateGroup x:Name="CommonStates">
                            <VisualState x:Name="Normal">
                                <VisualState.Setters>
                                    <Setter TargetName="FlyoutItemLabel" Property="Label.TextColor" Value="{StaticResource Primary}" />
                                </VisualState.Setters>
                            </VisualState>
                        </VisualStateGroup>
                    </VisualStateGroupList>
                </Setter>
            </Style>
        </ResourceDictionary>
    </Shell.Resources>


    <Shell.FlyoutHeaderTemplate>
        <DataTemplate>
            <Grid BackgroundColor="{StaticResource Dark}"
                  HeightRequest="220">
                <Image Aspect="AspectFit"
                       Source="aboutus_img.png"
                       Opacity="0.6" />
                <Label Text="{Binding MenuHeaderName,Mode=OneWay}"
                       TextColor="White"
                       FontAttributes="Bold"
                       HorizontalTextAlignment="Center"
                       VerticalTextAlignment="End" />
            </Grid>
        </DataTemplate>
    </Shell.FlyoutHeaderTemplate>

    <Shell.FlyoutFooter>
        <ContentView xmlns="http://xamarin.com/schemas/2014/forms"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:sys="clr-namespace:System;assembly=netstandard">
            <StackLayout>
                <Label Text=" Release 1.0.15" TextColor="{StaticResource Secondary }" HorizontalOptions="Start" />
                <!--<Label Text=" Production Environment" TextColor="{StaticResource Primary}" HorizontalOptions="Start" />-->
                <!--<Label Text="Testing Environment" TextColor="{StaticResource Primary}" HorizontalOptions="Start" />-->
            </StackLayout>
        </ContentView>
    </Shell.FlyoutFooter>

    <TabBar>
        <ShellContent Route="StartupPage" Shell.FlyoutBehavior="Disabled" ContentTemplate="{DataTemplate local:StartupPage}" />
    </TabBar>

    <FlyoutItem Title="" >
        <ShellContent  Route="HomePage" ContentTemplate="{DataTemplate local:HomePage}" />
    </FlyoutItem>
    
    <!--
    #####################################
        MENU #1 - BRBK
    #####################################
    -->
    
    <FlyoutItem IsVisible="{Binding esActivoMn1}" IsEnabled="False" Title="Module Break Bulk" Icon="icon_dock.png" >
        <ShellContent Route="" IsEnabled="False" />
    </FlyoutItem>

    <FlyoutItem IsVisible="{Binding esActivoBR1}" Title="      >> Inbox " >
        <ShellContent Route="InboxPage" ContentTemplate="{DataTemplate local:InboxPage}" />
    </FlyoutItem>
    
    <FlyoutItem IsVisible="{Binding esActivoBR3}" Title="      >> Dispatch Task">
        <!--Icon="icon_teu.png"-->
        <ShellContent Route="DispatchPage" ContentTemplate="{DataTemplate local:DispatchPage}" />
    </FlyoutItem>

    <!--
    #####################################
        MENU #2 - SEALS
    #####################################
    -->
    <FlyoutItem IsVisible="{Binding esActivoMn2}" IsEnabled="False" Title="Module Seals" Icon="seal.png" >
        <ShellContent Route="" IsEnabled="False" />
    </FlyoutItem>

    <FlyoutItem IsVisible="{Binding esActivoMT4}" Title="      >> [IMPO] Download Confirmation" >
        <ShellContent Route="DownloadConfirmationPage" ContentTemplate="{DataTemplate local:DownloadConfirmationPage}" />
    </FlyoutItem>

    <FlyoutItem IsVisible="{Binding esActivoMT2}" Title="      >> [IMPO] Seal Registration" >
        <ShellContent Route="MtySealRegistersPage" ContentTemplate="{DataTemplate local:MtySealRegistersPage}" />
    </FlyoutItem>

    <FlyoutItem IsVisible="{Binding esActivoMT1}" Title="      >> [EXPO] Seal Validation" >
        <ShellContent Route="MtySealValidationPage" ContentTemplate="{DataTemplate local:MtySealValidationPage}" />
    </FlyoutItem>

    <FlyoutItem IsVisible="{Binding esActivoMT7}" Title="      >> [EXPO] Seal Assigns" >
        <ShellContent Route="FclSealAssignsPage" ContentTemplate="{DataTemplate local:FclSealAssignsPage}" />
    </FlyoutItem>
    
    <FlyoutItem IsVisible="{Binding esActivoMT3}" Title="      >> POW" >
        <ShellContent Route="MtyPOWPage" ContentTemplate="{DataTemplate local:MtyPOWPage}" />
    </FlyoutItem>

    <FlyoutItem IsVisible="{Binding esActivoMT5}" Title="      >> [PAN] Seal Pre Embarque" >
        <ShellContent Route="FclSealPreEmbarquePage" ContentTemplate="{DataTemplate local:FclSealPreEmbarquePage}" />
    </FlyoutItem>

    <FlyoutItem IsVisible="{Binding esActivoMT6}" Title="      >> Seal Aforo" >
        <ShellContent Route="FclSealAforoPage" ContentTemplate="{DataTemplate local:FclSealAforoPage}" />
    </FlyoutItem>

    <FlyoutItem IsVisible="{Binding esActivoMT8}" Title="      >> Seal Yard Validation" >
        <ShellContent Route="FclSealYardValidationPage" ContentTemplate="{DataTemplate local:FclSealYardValidationPage}" />
    </FlyoutItem>

    <!--
    #####################################
        MENU #3 - VBS
    #####################################
    -->

    <FlyoutItem IsVisible="{Binding esActivoMn3}" IsEnabled="False" Title="Module VBS" Icon="vbs.png" >
        <ShellContent Route="" IsEnabled="False" />
    </FlyoutItem>

    <FlyoutItem IsVisible="{Binding esActivoVB1}" Title="      >> [VBS] Inbox" >
        <ShellContent Route="VBSInboxAisvPage" ContentTemplate="{DataTemplate local:VBSInboxAisvPage}" />
    </FlyoutItem>

    <FlyoutItem IsVisible="{Binding esActivoVB2}" Title="      >> [VBS] Assign Location" >
        <ShellContent Route="MtySealRegistersPage" ContentTemplate="{DataTemplate local:VBSAssignsPositionPage}" />
    </FlyoutItem>

    <FlyoutItem IsVisible="{Binding esActivoVB3}" Title="      >> [VBS] Check Load" >
        <ShellContent Route="VBSCheckLoadPage" ContentTemplate="{DataTemplate local:VBSCheckLoadPage}" />
    </FlyoutItem>

    <FlyoutItem IsVisible="{Binding esActivoVB4}" Title="      >> [VBS] Dispatch Order" >
        <ShellContent Route="VBSOrderDispatchInboxPage" ContentTemplate="{DataTemplate local:VBSOrderDispatchInboxPage}" />
    </FlyoutItem>

    <FlyoutItem IsVisible="{Binding esActivoVB5}" Title="      >> [VBS] Pre Dispatch" >
        <ShellContent Route="VBSPreDispatchInboxPage" ContentTemplate="{DataTemplate local:VBSPreDispatchInboxPage}" />
    </FlyoutItem>

    <FlyoutItem IsVisible="{Binding esActivoVB6}" Title="      >> [VBS] Dispatch" >
        <ShellContent Route="VBSDispatchPage" ContentTemplate="{DataTemplate local:VBSDispatchPage}" />
    </FlyoutItem>

    <FlyoutItem IsVisible="{Binding esActivoVB7}" Title="      >> [VBS] Shipment" >
        <ShellContent Route="VBSShipmentInboxPage" ContentTemplate="{DataTemplate local:VBSShipmentInboxPage}" />
    </FlyoutItem>

    <!--
    #####################################
        MENU #4 - VHS
    #####################################
    -->

    <FlyoutItem IsVisible="{Binding esActivoMn4}" IsEnabled="False" Title="Modulo VHS" Icon="auto_naranja.png" >
        <ShellContent Route="" IsEnabled="False" />
    </FlyoutItem>
    <FlyoutItem IsVisible="{Binding esActivoVHS1}" Title="      >> [VHS] Task Order" >
        <ShellContent Route="VHSOrdenTrabajoPage" ContentTemplate="{DataTemplate local:VHSOrdenTrabajoPage}" />
    </FlyoutItem>
    <FlyoutItem IsVisible="{Binding esActivoVHS2}" Title="      >> [VHS] Tarja" >
        <ShellContent Route="VHSTarjaPage" ContentTemplate="{DataTemplate local:VHSTarjaPage}" />
    </FlyoutItem>
    <FlyoutItem IsVisible="{Binding esActivoVHS3dl}" Title="      >> [VHS] Contenedor" >
        <ShellContent Route="VHSContenedorPage" ContentTemplate="{DataTemplate local:VHSContenedorPage}" />
    </FlyoutItem>
    <FlyoutItem IsVisible="{Binding esActivoVHS4}" Title="      >> [VHS] Buscar Vehiculo por QR" >
        <ShellContent Route="VHSContenedorPage" ContentTemplate="{DataTemplate local:VHSTarjaConsultaDetail}" />
    </FlyoutItem>
    <FlyoutItem IsVisible="{Binding esActivoVHS5}" Title="      >> [VHS] Despacho" >
        <ShellContent Route="VHSContenedorPage" ContentTemplate="{DataTemplate local:VHSVehiculosDespachoPage}" />
    </FlyoutItem>
    
    <MenuItem 
    Text="      >> [VHS] Novedades" 
    Command="{Binding AbrirTarjaNovedades}" />







    <!-- 
        When the Flyout is visible this defines the content to display in the flyout.
        FlyoutDisplayOptions="AsMultipleItems" will create a separate flyout item for each child element    
        https://docs.microsoft.com/dotnet/api/xamarin.forms.shellgroupitem.flyoutdisplayoptions?view=xamarin-forms
    -->
    <!--<FlyoutItem Title="About" Icon="icon_about.png">
        <ShellContent Route="AboutPage" ContentTemplate="{DataTemplate local:AboutPage}" />
    </FlyoutItem>
    <FlyoutItem Title="Browse" Icon="icon_feed.png">
        <ShellContent Route="ItemsPage" ContentTemplate="{DataTemplate local:ItemsPage}" />
    </FlyoutItem>-->

    <FlyoutItem IsVisible="False">
        <ShellContent Route="StartupPage"
                  Shell.FlyoutBehavior="Disabled"
                  ContentTemplate="{DataTemplate local:StartupPage}" />
    </FlyoutItem>

    <!-- When the Flyout is visible this will be a menu item you can tie a click behavior to  -->
    <MenuItem IconImageSource="icon_logout.png" Text="Logout" StyleClass="MenuItemLayoutStyle" Clicked="OnMenuItemClicked">
    </MenuItem>

    <!--
        TabBar lets you define content that won't show up in a flyout menu. When this content is active
        the flyout menu won't be available. This is useful for creating areas of the application where 
        you don't want users to be able to navigate away from. If you would like to navigate to this 
        content you can do so by calling 
        await Shell.Current.GoToAsync("//LoginPage");
    -->
    <TabBar>
        <ShellContent Route="LoginPage" ContentTemplate="{DataTemplate local:LoginPage}" />
    </TabBar>

    
</Shell>
